# Generated by Django 4.2.1 on 2023-09-02 16:04

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import university.models
import university.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name_am', models.CharField(blank=True, max_length=200, null=True, validators=[university.validators.validate_amharic], verbose_name='ሙሉ ስም')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, validators=[university.validators.validate_ethiopian_phone_number])),
                ('photo', models.ImageField(blank=True, default=university.models.get_default_profile_image, upload_to=university.models.get_profile_image_filepath, verbose_name='profile picture')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='email address')),
                ('role', models.CharField(choices=[('REGISTRAR', 'Registrar'), ('LIBRARIAN', 'Librarian'), ('PROCTOR', 'Proctor'), ('SECURITY', 'Security'), ('CAFE_STAFF', 'Cafe Staff'), ('ADMIN', 'Admin')], max_length=10, verbose_name='Role')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telephone_phone', models.CharField(blank=True, max_length=20, null=True, validators=[university.validators.validate_ethiopian_phone_number])),
                ('email', models.EmailField(max_length=254)),
                ('country', models.CharField(max_length=150)),
                ('region', models.CharField(max_length=150)),
                ('state', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('author', models.CharField(max_length=255)),
                ('isbn', models.CharField(max_length=13)),
            ],
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Campus Name')),
                ('name_am', models.CharField(max_length=255, validators=[university.validators.validate_amharic], verbose_name='የካምፓስ ስም')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.address')),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon_type', models.CharField(max_length=50)),
                ('discription', models.TextField(blank=True, max_length=100, null=True)),
                ('expiration_date', models.DateField(validators=[django.core.validators.MinValueValidator(limit_value=datetime.date(2023, 9, 2), message="Expiration date cannot be earlier than today's date.")])),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Department Name')),
                ('name_am', models.CharField(max_length=255, validators=[university.validators.validate_amharic], verbose_name='የትምህርት ክፍል')),
            ],
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('name_am', models.CharField(max_length=255, validators=[university.validators.validate_amharic], verbose_name='ሙሉ ስም')),
                ('relationship', models.CharField(max_length=255, verbose_name='relationship')),
                ('relationship_am', models.CharField(max_length=255, validators=[university.validators.validate_amharic], verbose_name='ዝምድና')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('country', models.CharField(blank=True, max_length=150, null=True)),
                ('region', models.CharField(blank=True, max_length=150, null=True)),
                ('state', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='SpecialMealPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('first_name_am', models.CharField(max_length=100, validators=[university.validators.validate_amharic], verbose_name='ስም')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('last_name_am', models.CharField(max_length=100, validators=[university.validators.validate_amharic], verbose_name='የአባት ስም')),
                ('student_id', models.CharField(max_length=20, unique=True)),
                ('photo', models.ImageField(default='img/p_pic.png', upload_to='photos/')),
                ('qr_code', models.ImageField(upload_to='qr_codes')),
                ('date_of_birth', models.DateField(validators=[university.validators.validate_birth_date])),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10)),
                ('government_id_number', models.CharField(max_length=50)),
                ('registration_date', models.DateTimeField(auto_now_add=True)),
                ('financial_aid', models.BooleanField()),
                ('is_cafe_user', models.BooleanField(default=True)),
                ('is_student_associative', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('address', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='university.address')),
                ('coupon', models.ManyToManyField(blank=True, related_name='students', to='university.coupon', verbose_name='coupon')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.department')),
                ('emergency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.emergencycontact')),
            ],
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taken_date', models.DateTimeField(auto_now_add=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.book')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.student')),
            ],
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Field Name')),
                ('name_am', models.CharField(max_length=255, validators=[university.validators.validate_amharic], verbose_name='ፊልድ')),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.campus')),
            ],
        ),
        migrations.CreateModel(
            name='DisciplinaryRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=200)),
                ('date', models.DateField(auto_now_add=True)),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.student')),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(max_length=80)),
                ('device_model', models.CharField(max_length=100)),
                ('serial_number', models.CharField(max_length=17)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='university.student')),
            ],
        ),
        migrations.AddField(
            model_name='department',
            name='field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.field'),
        ),
        migrations.CreateModel(
            name='CafeAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_eaten', models.BooleanField(default=False)),
                ('check_in_time', models.TimeField(blank=True, null=True)),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='university.meal')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cafeatendance_set', to='university.student')),
            ],
        ),
    ]
